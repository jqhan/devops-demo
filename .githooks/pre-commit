#!/bin/bash

all_modules=($(./gradlew projects | grep -oh "':.*" | tr -d \'\:'\r'))
touched_added_files=($(git diff --name-only --cached))
touched_modules=()

for path in ${touched_added_files[@]}; do
  splitPath=(${path//\// }) # Splits on /
  module=${splitPath[0]}
  if [[ " ${all_modules[@]} " =~ " ${module} " ]]; then 
    # if module exists in all_modules
    touched_modules+=(${module})
  fi
done

# Remove duplicates
touched_modules=($(for v in "${touched_modules[@]}"; do echo "$v"; done | sort | uniq | xargs))

if [[ -z "${PRECOMMITALLTESTS}" ]]; then
  # environment var is not set
  PERFORM_ALL_TESTS=false
else
  PERFORM_ALL_TESTS="${PRECOMMITALLTESTS}"
fi

for touched_module in ${touched_modules[@]}; do
  echo "--------------------------------------"
  echo "Running SpotBugs on module: ${touched_module}"
  ./gradlew ${touched_module}:spotbugsMain
  echo "--------------------------------------"
  echo "Running PMD on module: ${touched_module}"
  ./gradlew ${touched_module}:pmdMain
  echo "--------------------------------------"
  echo "Running checkstyle on module: ${touched_module}"
  ./gradlew ${touched_module}:checkstyleMain
  if [ ${PERFORM_ALL_TESTS} == true ]; then
    echo "--------------------------------------"
    echo "Running unit tests on module: ${touched_module}"
    ./gradlew ${touched_module}:test
    echo "--------------------------------------"
    echo "Running mutation tests on module: ${touched_module}"
    ./gradlew ${touched_module}:pitest
  fi

done

./generate-html.sh &>/dev/null
echo "--------------------------------------"
echo "url to reports: http://demo-reports-devops-demo.s3-website-eu-west-1.amazonaws.com/"
echo "--------------------------------------"